% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/capi.R
\name{capi}
\alias{capi}
\title{Census API Data Call}
\usage{
capi(
  year = NULL,
  tableID = NULL,
  variables = NULL,
  geography = NULL,
  filterAddress = NULL,
  filterRadius = NULL,
  coords = NULL,
  ggr = NULL,
  geosObject = NULL,
  mode = "table",
  filterSummary = FALSE,
  filterSummaryLevels = "root",
  filterByGeoType = NULL,
  filterByGeoValue = NULL,
  state = NULL,
  county = NULL,
  tract = NULL,
  block_group = NULL,
  place = NULL,
  metro = NULL,
  consolidatedCity = NULL,
  region = NULL,
  division = NULL,
  puma = NULL,
  dataset_main = NULL,
  dataset_sub = NULL,
  dataset_last = NULL,
  dataset_extra = NULL,
  censusVars = NULL,
  verbose = FALSE,
  profile = FALSE,
  fast = FALSE,
  simpleReturn = FALSE,
  test = FALSE,
  st = NULL
)
}
\arguments{
\item{year}{Year for data call.}

\item{tableID}{Formerly known as varBase, or concept, or group: i.e., "B01001"}

\item{variables}{A vector of variables for the call. If multiple select variables per tableID are desired,
then variables should be constructed as a named list, with tableID as name, and sub list items as 
variablesâ€”either full ("B01001_001") or numeric (c(1:8)).}

\item{geography}{Specifying geography: e.g., "tract", "county"}

\item{filterAddress}{An address input used to generate a radius around, for filtering data.}

\item{filterRadius}{A numeric value specifying the radius in miles around the address.}

\item{coords}{An sf coordinate object for get_geocode_radius.}

\item{ggr}{Internal: to pass a get_geocode_radius() object to function.}

\item{geosObject}{Optional, attach geos object to simplify geo processes.}

\item{mode}{c("table","summarize","median")}

\item{filterSummary}{Logical parameter to specify whether to filter out summary levels (typically _001 and therefore "root").}

\item{filterSummaryLevels}{Explicit description of lowest type denoting summary level. Also excludes lower levels.}

\item{filterByGeoType}{An irregular geo type to get a smaller overlapping set
of tracts, block_groups or other geography from. Options are currently
"metro", "place","combined_statistical_areas". E.g., Find all tracts in Chicago (place).}

\item{filterByGeoValue}{A value to find object for filtering. Either NAME or GEOID.}

\item{state}{Input (abb. or FIPS) of state for search.}

\item{county}{Input (abb. or FIPS) of county for search.}

\item{tract}{Input (abb. or FIPS) of tract for search.}

\item{block_group}{Input (abb. or FIPS) of block group for search.}

\item{place}{Input (abb. or FIPS) of place for search.}

\item{metro}{Input (abb. or FIPS) of metropolitan statistical area for search.}

\item{consolidatedCity}{Input (abb. or FIPS) of consolidated city for search.}

\item{region}{Input (abb. or FIPS) of region for search.}

\item{division}{Input (abb. or FIPS) of division for search.}

\item{puma}{Input (abb. or FIPS) of puma (public use microdata area) for search.}

\item{dataset_main}{Selection parameters for get_census_variables (e.g. "acs")}

\item{dataset_sub}{Selection parameters for get_census_variables (e.g. "acs5")}

\item{dataset_last}{Selection parameters for get_census_variables (e.g. "cprofile")}

\item{censusVars}{Passthrough object to bypass get_census_variables}

\item{verbose}{Logical parameter to specify whether to produce verbose output.}

\item{profile}{Logical parameter to specify whether to build profile.}

\item{fast}{Internal parameter for stat table}

\item{simpleReturn}{Param to return raw data, not formatted.}

\item{test}{Internal parameter for testing suite.}

\item{st}{Internal parameter to provide timestamp consistency.}
}
\value{
dataframe
}
\description{
An API interface for capturing and formatting census data.
}
\examples{
\dontrun{
Basic call
capi(year=2022,datatype="acs", dataset="acs5", tableID="B01001",
variables=c("B01001_001","B01001_002"), geography="tract", filterAddress=v,
filterRadius=1, ggr=NULL, mode="table", filterSummary=FALSE,
filterSummaryLevels="root", state=NULL, county=NULL, tract=NULL,
block_group=NULL, verbose=TRUE, profile=FALSE, st=NULL)

capi(year=2022,datatype="acs", dataset="acs5", tableID="B01001",
variables=c("B01001_001","B01001_002"), geography="tract", filterAddress=v,
filterRadius=1, ggr=NULL, mode="summarize", filterSummary=FALSE,
filterSummaryLevels="root", state=NULL, county=NULL, tract=NULL,
block_group=NULL, verbose=TRUE, profile=FALSE, st=NULL)
}

}
